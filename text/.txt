 year we launched ChartDB OSS   an opensource tool that generates ER diagrams from your database via querysqldbml without needing direct DB access.Now were launching the ChartDB Agent.It helps you design databases from scratch or make schema changes with natural language.You can Generate schemas by simply describing them in plain English Brainstorm new tables columns and relationships with AI Iterate visually in a diagram ERD Deterministically export SQL scriptTry it out here   no signup required.Or sign up and use it on your own databaseWould love to get your feedback 
 everyoneCobalt is a program for painting textural and expressive pixelart on Windows Linux Nintendo DS and inbrowser. The same KB core executable runs on all platforms with a thin emulator layer sitting on top to handle differences in inputs and filesystem access which makes it easy to port between systems. Its built on Bedrock an bit virtual computer system I posted about here in July.I created Cobalt because I wanted to draw messy gritty pixel art without smooth gradients and the smaller colour palette helped with making bolder colour choices. Images can be moved back and forth between platforms so you can copy worksinprogress to the DS to keep working away on the bus or train. Its like a era vision of the future.Theres a live demo on the linked page that runs in the browser and there are downloadable demos for every platform here. Let me know if you try it out or have any questions!
 Im Josh cofounder of Imbue. We built Sculptor because we wanted a great UI for parallel coding agents.We love Claude Code but wanted to solve some of the problems that come from running multiple agents in parallel ex merge conflicts with multiple agents reinstalling dependencies with git worktrees Claude Code could deleting your home directory etc.Sculptor is a desktop app that lets you safely run Claude Code agents by putting them in separate docker containers. This lets you use Claude without having to compromise on security or deal with annoying tool permission prompts. Then you can just tell Claude to keep running the code until it actually works.To help you easily work with containerized agents we created Pairing Mode bidirectionally sync the agents code into your IDE and testedit together in real time. You can also simply pull and push manually if you want.We have some more cool features planned on our roadmap that are enabled by this approach like the ability to fork conversations and the entire state of the container or roll back to a previous state.Its still very early but we would love your feedback.Sculptor itself is free to use so please try it out and let us know what you think!
 been frustrated with dependency hell and clutter on my VPS from dev so I built Devbox a lightweight opensource CLI tool that spins up isolated development environments using Docker. Each project runs in its own container but your code stays in simple flat folders on the host machineno messing with volumes or sync issues. Environments are disposable so you can nuke and recreate them without losing your work. Key features
 Instant setup devbox init myproject and youre in a fresh env with devbox shell. Configurable via JSON Define packages services and more in a devbox.json file. Share it in your repo for reproducible setupsteammates just run devbox up. DockerinDocker by default Build and run containers inside your env without extra config. Hostfriendly Edit code directly on your machine the container handles the runtime. Templates for quick starts Builtins for Python Node.js Go web dev etc. Advanced options Port mapping env vars resource limits and even mounting your dotfiles.Its FOSS MIT license Linuxfocused DebianUbuntu or WSL on Windows and super easy to install curl fsSL bash.Check out the launch page and docs at or the repo at Id love some feedback stars or contributions to help grow this into a solid community tool!
 got tired of fighting through spammy tool sites just to do something simple so I made Toolbrew in a few hours on Replit. Just a bunch of free little tools in one place. Text converters SEO checks video downloaders that kind of stuff. No signups no ads.If there is a tool you wish existed you can request it on the site and I will build it. Do your worst. Seriously ANY tool.Maybe it helps maybe not. Enjoy!
 HN! Ive been building Dayflow a macOS app that automatically tracks what youre actually working on not just which apps you have open.Heres what it does It creates a semantic timeline of your day It does it by understanding the content on your screen with local or cloud VLMs This allows you to see exactly where your time went without any manual logging.Traditional time trackers tell you  hours in Chrome which is not very helpful. Dayflow actually understands if youre reading documentation debugging code or scrolling HN. Instead of Chrome hours you get Reviewed PR comments min Read HN thread about Rust min Debugged auth flow .hr.I was an early Rewind user but rarely used the retrieval feature. I built Dayflow because I saw other interesting uses for screen data. I find that it helps me stay on track while working  I check it every few hours and make sure Im spending my time the way I intended  if Im not I try to course correct.Heres what you need to know about privacy Run locally using qwen.vlb GB model No cloud uploads no account Full source available under MIT license  Optional BYO Gemini API key for better quality stored in Keychain with freetier workaround to prevent training on your dataThe tech stack is pretty simple SwiftUI with a local sqlite DB. Uses native macOS apis for efficient screen captures. Since most people who run LLMs locally already have their tool of choice Ollama LLMStudio etc. I decided to not embed an LLM into Dayflow.By far the biggest challenge was adapting from SOTA vision models like Gemini . Pro to small local models. My constraints were that it had to take up Heres what Im working on nextDistillation Using Geminis highquality outputs as training data to teach a local model the patterns it needs hopefully closing the quality gap.Custom dashboards where you can track answers to any question like How long did I spend on HN? or Hours until my first deep work session of the dayId love to hear your thoughts especially if youve struggled with productivity tracking or have ideas for what youd want from a tool like this.
 started working as a freelancer in Finland a year ago and was surprised to learn that no decent contract template was available for direct assignments. There were some free contract templates available for intermediated assignments but not for direct assignments. The golden standard of contract templates in Finland is an extremely heavyhanded and expensive template that costs  PER YEAR to use. Personally at the time I decided to just do a DIY contract for my first freelancing project.Over time as I got more engaged in the Finnish freelancing community I realized that many people struggled with the same issue. After discussing this in our freelancing coop Ohjelmistofriikit we decided to invest both time and money into solving this problem. We decided right from the start that we were gonna open source everything and give it out for free.We first developed a traditional document template in collaboration with a law firm. After that we developed a web generator that makes it easy to fill out the template. The user flow of the generator is designed to eliminate boilerplatetype work such as hiding sections instead of showing skip this section if condition X does not apply to you and also to reduce mistakes users might make when editing a traditional document template such as copypasting something incorrectly.Although the legalese is designed for the Finnish jurisdiction the contract template can be useful as an example for similar work in other jurisdictions.Go ahead and draft a contract right there in your browser!
 Redis from scratch in Zig.
 is a programming environment for generative music. Programs are laid out in a twodimensional grid and evolve over time according to a fixed set of rules. The system is much like a cellular automaton in that most of the rules governing the evolution of the system are local.C programs describe sequences of discrete events in time. The environment includes a primitive sampler as a selfcontained means of interpreting these events as sound. For full expressivity though the system is best used as a generator of data for interpretation by an external musical instrument such as a synthesizer.The project was very directly inspired by Orca  It began as my own fromscratch implementation of Orca and diverged over time.Its written in C and compiled to WASM for the browser.See the following pages for more infoabout page manual video
