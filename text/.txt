bet you didnt knew you can use modelling clay as opposed to d printing to make nice devices by hand
Im Jos and I built Recall to solve a problem that was driving me crazy.
I use Claude for coding daily but every conversation starts from scratch. Id explain my architecture coding standards past decisions... then hit the context limit and lose everything. 
Recall is an MCP Model Context Protocol server that gives Claude persistent memory using Redis semantic search. Think of it as longterm memory that survives context limits and session restarts.How it works
Claude stores important context as memories during conversations
Memories are embedded OpenAI and stored in Redis with metadata
Semantic search retrieves relevant memories automatically
Works across sessions projects even machines if you use cloud RedisKey Features
Relationships Link related memories into knowledge graphs
Workspace isolation Project A memories dont pollute Project BTech Stack
Works with Claude Desktop Claude Code any MCP clientExample Use Case
Im building an ecommerce platform. I told Claude once We use Tailwind prefer composition API API rate limit is min. Now every conversation Claude remembers and applies these preferences automatically.Whats Next v.. 
Better error messages and loggingTry itnpm install g joseairosarecall
HN thanks for showing interest in this. Happy to collaborate on this project. Im hoping to get it stable soon so my own family can start using it.Ive been working on this for about years nights and weekends. Its been really slow going since I only have my own personal data to test it with.I just dont love that my data is primarily stored on someone elses computer up in the cloud. I want my own local copy at least. And while I can download exports from my various accounts I dont want them to just gather dust and rot on my hard drive.So Timelinize helps keep that data alive and relevant and in my control. I dont have as much worry if my cloud accounts go away. Hopefully youll find it useful and I hope we can collaborate.Im open to changing the name. Never really liked this one...
were Axel and Vignesh cofounders of Innate We just launched MARS a generalpurpose robot with an open onboard agentic OS built on top of ROS.Overview demo of autonomous usecases last thread we started we felt there is currently no good affordable generalpurpose that anyone can build on. Theres no lack of demand hugging faces SO and LeKiwi are pretty clear successes already but the hardware is unreliable the software experience is barebone and keeps changing and you often need to buy hidden extras to make them work starting with a computer with a good gpu. The Turtlebots were good but are getting outdated.The opensource hobbyist movement lacks really good platforms to build on and we wanted something robust and accessible. MARS is our attempt at making a first intuitive AI robot for everyone.What it is It comes assembled and calibrated Has onboard compute with a jetson orin nano gb a DoF arm with a wrist camera Sensors RGBD wideangle cam D LiDAR speakers Control via a dedicated app and a leader arm that plugs in iPhone and Android additional USB ports GPIO pins for extra sensors or effectors. And our novel SDK called BASIC that allows to run it like an AI agent with VLAs.It boots in a minute can be controlled via phone programmable in depth with a PC and the onboard agent lets it see talk plan and act in realtime.Our SDK BASIC allows to create behaviors our name for programs ranging from a simple world to a very complex longhorizon task involving reasoning planning navigation and manipulation. You can create skills that behaviors can run autonomously by training the arm or writing code tools like for an AI agent.You can also call the ROS topics to control the robot at a lowlevel. And anything created on top of this SDK can be easily shared with anyone else by just sharing the files.This is intended for hobbyist builders and education and we would love to have your feedback!If you want to try it theres a temporary code HACKERNEWSINNATEMARS that lowers the price to.s The hardware and software will be opensourced too if some of you want to contribute or help us prepare it properly feel free to join our discord at
I built a Google Sheet and it quietly took off.In I made it to track my own finances for income expenses savings yearly summaries etc. I shared it once on Reddit forgot about it for a year When I checked back it had over k views and I was honestly stoked!
Just a spreadsheet people actually stick with and find useful.I finally gave it a proper home writeitdown.
Now more than people use it.Its intentionally boring and thats why it works.People dont always need AI. They just need something that actually solves their problem.
This isnt a billiondollar startup of course but it taught me more about building products than almost anything else.Build something useful.
Even if its just a simple spreadsheet.So whats the most boring thing youve built that found unexpected traction?
HNI find myself reaching for tools like ittools.tech or other random sites every now and then during development or debugging. So I built a toolkit with a sane and simple CLI interface for most of those tools.For the curious and lazy at the moment ut has tools for Encoding base encode decode url encode decode Hashing md sha sha Data Generation uuid v v token lorem random Text Processing case lower upper camel title constant header sentence snake prettyprint diff Development Tools calc json builder regex datetime Web Network http status serve qr Color Design color convert Reference unicodeFor full disclosure parts of the toolkit were built with Claude Code I wanted to use this as an opportunity to play with it more.
Feel free to open feature requests andor contribute.
You can set any brush canvas size export art as a text file.I want to keep it as manualanalog as possible hence there is no tool for converting image to ASCII.Prompting LLMs to draw ASCII art turned out to be a difficult task.
So instead I decided to ask it make a drawing board. Wihtout coding agent I wouldnt even try myself. Although it is an interesting task it would drift me away.Basically its just a drawing board with endless variations of textures and brushes when you make large canvas and zoom out you dont see ASCII anymore but textured drawing.
this is a cat brush used.I would appreciate if you could give it a try and tell your people about it if its something that may be of their interest.
Also please give any feedback here or on X. turns out there is already or is emerging ASCII benchmark for LLMs.
I built pyscn for Python developers in the vibe coding era.
If youre using Cursor Claude or ChatGPT to ship Python code fast you know the feeling features work tests pass but the codebase feels... Common vibe coding artifacts Code duplication from copypasted snippets Dead code from quick iterations Overengineered solutions for simple problems Inconsistent patterns across modulespyscn performs structural analysis APTED tree edit distance LSH ControlFlow Graph CFG analysis Coupling Between Objects CBO Cyclomatic ComplexityTry it without installation uvx pyscn analyze. Using uv fastest
Built with Go treesitter. Happy to dive into the implementation details!
all I built this. Its not trying to capture every autistic experience thatd be impossible. Its based on my own lived experience as well as that of friends on the spectrum.Im trying to give people a feel for what masking decision fatigue and burnout can look like daytoday. Thats hard to explain in words but easier to show through choices and stats. Im not trying to define autism.Ive gotten good feedback here about resilience meds and difficulty tuning. Ill keep tweaking it. If even a few people walk away thinking ah maybe thats why my coworker struggles in those situations then its worth it.Appreciate everyone whos tried it and shared thoughts.
year we launched ChartDB OSS an opensource tool that generates ER diagrams from your database via querysqldbml without needing direct DB access.Now were launching the ChartDB Agent.It helps you design databases from scratch or make schema changes with natural language.You can Generate schemas by simply describing them in plain English Brainstorm new tables columns and relationships with AI Iterate visually in a diagram ERD Deterministically export SQL scriptTry it out here no signup required.Or sign up and use it on your own databaseWould love to get your feedback
everyoneCobalt is a program for painting textural and expressive pixelart on Windows Linux Nintendo DS and inbrowser. The same KB core executable runs on all platforms with a thin emulator layer sitting on top to handle differences in inputs and filesystem access which makes it easy to port between systems. Its built on Bedrock an bit virtual computer system I posted about here in July.I created Cobalt because I wanted to draw messy gritty pixel art without smooth gradients and the smaller colour palette helped with making bolder colour choices. Images can be moved back and forth between platforms so you can copy worksinprogress to the DS to keep working away on the bus or train. Its like a era vision of the future.Theres a live demo on the linked page that runs in the browser and there are downloadable demos for every platform here. Let me know if you try it out or have any questions!
Im Josh cofounder of Imbue. We built Sculptor because we wanted a great UI for parallel coding agents.We love Claude Code but wanted to solve some of the problems that come from running multiple agents in parallel ex merge conflicts with multiple agents reinstalling dependencies with git worktrees Claude Code could deleting your home directory etc.Sculptor is a desktop app that lets you safely run Claude Code agents by putting them in separate docker containers. This lets you use Claude without having to compromise on security or deal with annoying tool permission prompts. Then you can just tell Claude to keep running the code until it actually works.To help you easily work with containerized agents we created Pairing Mode bidirectionally sync the agents code into your IDE and testedit together in real time. You can also simply pull and push manually if you want.We have some more cool features planned on our roadmap that are enabled by this approach like the ability to fork conversations and the entire state of the container or roll back to a previous state.Its still very early but we would love your feedback.Sculptor itself is free to use so please try it out and let us know what you think!
been frustrated with dependency hell and clutter on my VPS from dev so I built Devbox a lightweight opensource CLI tool that spins up isolated development environments using Docker. Each project runs in its own container but your code stays in simple flat folders on the host machineno messing with volumes or sync issues. Environments are disposable so you can nuke and recreate them without losing your work. 
Instant setup devbox init myproject and youre in a fresh env with devbox shell. Configurable via JSON Define packages services and more in a devbox.Share it in your repo for reproducible setupsteammates just run devbox up. DockerinDocker by default Build and run containers inside your env without extra config. Hostfriendly Edit code directly on your machine the container handles the runtime. Templates for quick starts Builtins for Python Node.js Go web dev etc. Advanced options Port mapping env vars resource limits and even mounting your dotfiles.Its FOSS MIT license Linuxfocused DebianUbuntu or WSL on Windows and super easy to install curl fsSL bash.Check out the launch page and docs at or the repo at Id love some feedback stars or contributions to help grow this into a solid community tool!